services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm run dev -- --host
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      - ./frontend:/app           
      - /app/node_modules        
    working_dir: /app
    networks:
      - app-network


  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: your_database
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./database-backup:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com   # Email para acceder a pgAdmin
      PGADMIN_DEFAULT_PASSWORD: admin          # Contrase침a para acceder a pgAdmin
      PGADMIN_LISTEN_PORT: 80                 # Puerto por el cual pgAdmin escuchar치 (ya est치 en el 80 por defecto)
      PGADMIN_SERVER_MODE: False
      PGADMIN_SERVER_NAME: PostgreSQL
      PGADMIN_DB_HOST: db
      PGADMIN_DB_PORT: 5432
      PGADMIN_DB_USER: user
      PGADMIN_DB_PASSWORD: password
      PGADMIN_DB_NAME: your_database
    ports:
      - "5050:80"   # Accederemos a pgAdmin desde http://localhost:5050
    volumes:
      - pgadmin_data:/var/lib/pgadmin  # Volumen persistente para los datos de pgAdmin
    networks:
      - app-network
    depends_on:
      - db

networks:
  app-network:
    driver: bridge

volumes:
  pgadmin_data:  # Volumen persistente para almacenar la configuraci칩n y datos de pgAdmin
